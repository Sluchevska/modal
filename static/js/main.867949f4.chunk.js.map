{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["LabelInput","styled","label","Input","input","Button","button","FormInput","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","Component","Span","span","ContainerItems","ul","ContactItems","li","ContactList","contacts","onRemove","map","id","onClick","Filter","Container","div","TitleH1","h1","TitleH2","h2","uuidv4","require","v4","App","filter","addContact","doubleName","find","contact","toLowerCase","doublePhoneNumber","alert","newContact","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","prevProps","localStorage","setItem","JSON","stringify","parsedContacts","parse","getItem","ContactForm","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.867949f4.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nexport const LabelInput = styled.label`\r\nfont-weight: 700;\r\nfont-style: italic;\r\nfont-size: 17px;\r\nmargin-right:5px;\r\n`\r\n\r\nexport const Input = styled.input`\r\nmargin-right: 5px;\r\npadding: 5px;\r\n\r\nborder-radius: 5px;\r\nbox-shadow: 1px 2px 3px rgb(85, 42, 85);\r\n`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder-radius: 5px;\r\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\r\nfont-size: 14px;\r\nfont-weight:700;\r\n  \r\n`","import { Component } from 'react';\r\nimport { LabelInput, Input, Button } from './ContactForm.styled';\r\n\r\nclass FormInput extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <LabelInput>Name</LabelInput>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n\r\n          <LabelInput>Number</LabelInput>\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n\r\n          <Button type=\"submit\">Add contact</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormInput;\r\n","import styled from \"@emotion/styled\";\r\nexport const Span = styled.span`\r\nfont-weight: 500;\r\nfont-style: italic;\r\nfont-size: 17px;\r\n`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder-radius: 5px;\r\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\r\nfont-size: 14px;\r\nfont-weight:700;\r\n  \r\n`\r\n\r\nexport const ContainerItems = styled.ul`\r\nmargin-top: 40px;\r\npadding-right:40px;\r\n`\r\n\r\nexport const ContactItems = styled.li`\r\n\r\nlist-style:none;\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 1fr 1fr;\r\nalign-items: center;\r\nmargin-bottom:5px;\r\n\r\n`\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Span,\r\n  Button,\r\n  ContactItems,\r\n  ContainerItems,\r\n} from './ContactList.styled';\r\n\r\nfunction ContactList({ contacts, onRemove }) {\r\n  return (\r\n    <ContainerItems>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItems key={id} name={name} number={number}>\r\n          <Span>{name}: </Span>\r\n          <Span>{number} </Span>\r\n          <Button type=\"button\" onClick={() => onRemove(id)}>\r\n            {' '}\r\n            Delete contact\r\n          </Button>\r\n        </ContactItems>\r\n      ))}\r\n    </ContainerItems>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Input, LabelInput } from '../ContactForm/ContactForm.styled';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <LabelInput>Find contact by name</LabelInput>\r\n    <Input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nmargin: 20px;\r\n\r\n background: linear-gradient(45deg, rgb(240, 160, 199), rgb(87, 66, 100));\r\npadding: 10px;\r\nwidth: 700px;\r\nbox-shadow: 5px 6px 9px rgb(85, 42, 85);\r\n border-radius: 5px;\r\n text-align: center;\r\n\r\n\r\n\r\n`\r\nexport const TitleH1 = styled.h1`\r\nfont-style: italic;\r\n\r\n\r\n\r\n`\r\n\r\nexport const TitleH2 = styled.h2`\r\nfont-style: italic;\r\nmargin-top:46px;\r\n\r\n\r\n\r\n`","import React from 'react';\n\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Container, TitleH1, TitleH2 } from './App.styled';\nimport './App.css';\n\nconst { v4: uuidv4 } = require('uuid');\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const doubleName = this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n    )\n    const doublePhoneNumber = this.state.contacts.find(contact => contact.number === number)\n    if (doubleName) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else if (doublePhoneNumber) {\n      alert(`This number ${number} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  \n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n   }\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if(parsedContacts){\n    this.setState({contacts:parsedContacts})}\n\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <Container>\n        <TitleH1>Phonebook</TitleH1>\n        <ContactForm onSubmit={this.addContact} />\n        <TitleH2>Contacts</TitleH2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          onRemove={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}